package org.st412m.kotlincourse.lesson3

//Погрузимся в атмосферу "Hackathon Survival": Марафон, где участники пытаются завершить реальный проект в условиях
// искусственно созданного хаоса (например, часто меняющиеся требования, неожиданные "сбои" в оборудовании)
//Для каждого из полей подбери наилучший способ хранения из известных тебе. Учитывай такие факторы, как изменяемость,
// обязательность, возможность начальной установки, ресурсоёмкие вычисления значения, необходимость проверки
// устанавливаемого значения на валидность или запрет доступа на установку при возможности чтения, публичность и
// приватность данных.

//Название мероприятия (неизменяемое, строковое, константа)

const val EVENTTITLE: String = "Hackathon Survival"

//Дата проведения (изменяемое, строковое)
var eventDay: String = "13.09.2024"

//Место проведения (изменяемое, строковое)
var eventLocation: String = "г.Москва, ул.Пушкина, 'Дом Колотушкина'"

//Подробный бюджет мероприятия, включая расходы на оборудование, кейтеринг и другие операционные расходы.
val expenses: String by lazy {
    "путь к файлу, где вот это вот всё"
}

//Количество участников(изменяемое, числовое, целое get set, но не больше чем максимальное количества людей,
// которое поместится)
var numberParticipants: Int = 0
    set(value) {
        if (value < maximumPeople ) {
            field += value
        } else {
            print("Вы кто такие? Я вас не звал! Идите...")
        }
    }

//Длительность хакатона(изменяемое, числовое, double, так как может измениться место, то и время так же может
// меняться в зависимсти от договоренностей)
var durationEvent: Double = 12.5

//Контактная информация и условия соглашений с поставщиками пищи, оборудования и других услуг.(лишним людям знать не
// обязательно)
val termsAgreements: String by lazy {
    "путь куда-то там к файлу со всей этой требухой"
}

//Текущее состояние хакатона (статус) (изменяемое, строковое, "начало, презентация, соревнование, награждение и т.п.")
var eventStatus: String = "Подготовка"

//Список спонсоров (могут добавиться, могут соскочить)
lateinit var sponsorsList: String

//Бюджет мероприятия(изменяемый, т.к. спонсоры выше)
var eventBudget: Double = 1_000_000.1

//Текущий уровень доступа к интернету
var downloadSpeed: Double = 0.00
    set(value) {
        "стучимся по API на speedtest.com и берем оттуда значение Download speed"
        field = value
    }

var uploadSpeed: Double = 0.00
    set(value) {
    "стучимся по API на speedtest.com и берем оттуда значение Upload speed"
        field = value
}

var ping: Int = 0
    set(value) {
        "стучимся по API на speedtest.com и берем оттуда значение Ping"
        field = value
    }

//Информация о транспортировке оборудования, распределении ресурсов и координации между различными командами)(нужно
// только во время подготовки, хотя пункт вообще мутный, его разбивать надо в части координации)
lateinit var logistics: String

//Количество команд
var numberTeams: Int = 0
    set(value) {
        field += value}

//Перечень задач(если я правильно понял, это перечень задач для выполнения на хакатоне)
val listTasks: String by lazy {
    "путь к файлу с задачами"
}

//План эвакуации (путь к файлу с планом)
val evacuationPlan: String by lazy {
    "путь к файлу с задачами"
}

//Список доступного оборудования (ОСТАНОВИЛСЯ ЗДЕСЬ)
var availableEquipment: String = ""

//Список свободного оборудования
var freeEquipment: String = ""


//График питания участников (зависит от поставщика питания, определяемого за неделю до начала)

//План мероприятий на случай сбоев

//Список экспертов и жюри

//Методы и процедуры для сбора отзывов от участников и гостей, включая анонимные опросы и интервью.

//Политика конфиденциальности

//Приватные отзывы (фидбэк) участников и зрителей для анализа проблем.

//Текущая температура в помещении

//Мониторинг и анализ производительности сетевого оборудования и интернет-соединения.

//Уровень освещения

//Лог событий мероприятия

//Доступность медицинской помощи

//Планы и процедуры для обеспечения безопасности мероприятия, включая планы эвакуации и протоколы чрезвычайных ситуаций.

//Регистрационный номер мероприятия

//Максимально допустимый уровень шума в помещении хакатона.

//Индикатор превышения уровня шума в помещениях

//Формат мероприятия (зависит от геополитической обстановки)

//Количество свободных мест для отдыха (например, кресел или диванов), сеттер валидирует, чтобы количество не было
// меньше нуля.

//План взаимодействия с прессой

//Детальная информация о проектах каждой команды, сбор данных включает в себя компиляцию кода и сбор статистики прогона
// автоматизированных проверок.

//Статус получения всех необходимых разрешений

//Указывает, открыт ли доступ к эксклюзивным ресурсам (например, специальному оборудованию)

//Список партнеров мероприятия

//Отчет, включающий фотографии, видео и отзывы, генерируется и становится доступен после завершения мероприятия.

//План распределения призов

//Контактная информация экстренных служб, медицинского персонала и других важных служб, недоступная участникам.

//Особые условия для участников с ограниченными возможностями

//Общее настроение участников (определяется опросами)

//Подробный план хакатона, включающий время и содержание каждого сегмента, инициализируется непосредственно перед
// началом мероприятия.

//Имя знаменитого специального гостя, которое будет объявлено за день до мероприятия.

//Максимальное количество людей, которое может вместить место проведения.(изменяемая, т.к если меняем место, то может
// изменится и максимальное число людей, которое туда влезет, цельночисленная)

var maximumPeople: Int = 1000

//Стандартное количество часов, отведенное каждой команде для работы над проектом.

//Текущая температура в помещении
