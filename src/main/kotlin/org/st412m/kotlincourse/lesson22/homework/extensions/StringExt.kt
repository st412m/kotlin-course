package org.st412m.kotlincourse.lesson22.homework.extensions

import java.time.LocalDate
import java.time.format.DateTimeFormatter
import kotlin.random.Random

/*
–†–µ–∞–ª–∏–∑—É–π—Ç–µ –¥–ª—è –∫–ª–∞—Å—Å–∞ String –¥–≤–∞ –º–µ—Ç–æ–¥–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è: encrypt –∏ decrypt. –ú–µ—Ç–æ–¥ encrypt –¥–æ–ª–∂–µ–Ω —Å–¥–≤–∏–≥–∞—Ç—å –∫–∞–∂–¥—ã–π —Å–∏–º–≤–æ–ª
–∏—Å—Ö–æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –ø–æ–∑–∏—Ü–∏–π –≤–ø–µ—Ä–µ–¥ –ø–æ —Ç–∞–±–ª–∏—Ü–µ Unicode, –∞ –º–µ—Ç–æ–¥ decrypt ‚Äî –Ω–∞ —Ç–æ –∂–µ —á–∏—Å–ª–æ –ø–æ–∑–∏—Ü–∏–π –Ω–∞–∑–∞–¥.
–û–±–∞ –º–µ—Ç–æ–¥–∞ –ø—Ä–∏–Ω–∏–º–∞—é—Ç –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä base —Ç–∏–ø–∞ Int, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≤–µ–ª–∏—á–∏–Ω—É —Å–¥–≤–∏–≥–∞. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –≤–∞—à—É —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é,
—É–±–µ–¥–∏–≤—à–∏—Å—å, —á—Ç–æ –ø–æ—Å–ª–µ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –∏ –ø–æ—Å–ª–µ–¥—É—é—â–µ–π —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏ —Å—Ç—Ä–æ–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é.
–°–¥–≤–∏–≥ –ø–æ —Ç–∞–±–ª–∏—Ü–µ Unicode —Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è –ø—Ä–æ—Å—Ç—ã–º –ø—Ä–∏–±–∞–≤–ª–µ–Ω–∏–µ–º –∏–ª–∏ –≤—ã—á–∏—Ç–∞–Ω–∏–µ–º —Ä–∞–∑–º–µ—Ä–∞ —Å–¥–≤–∏–≥–∞ –∫ char —Å–∏–º–≤–æ–ª—É.
*/

fun String.encrypt(shift: Int): String {
    return this.map { (it.code + shift).toChar() }.joinToString ("")
}

fun String.decrypt(shift: Int): String {
    return this.map { (it.code - shift).toChar() }.joinToString("")
}
/*
–ú–Ω–æ–≥–∏–µ —É–∂–µ –∑–Ω–∞—é—Ç –ª—é–±–∏–º—É—é –∏–≥—Ä—É –≤ –¢–≤–∏—Ç—Ç–µ—Ä–µ - —Å–æ–±–∏—Ä–∞–Ω–∏–µ —Ä–∞–∑–Ω—ã—Ö —Å–ª–æ–≤ –∏–∑ –±—É–∫–≤ —á–µ—Ä–µ–∑ –æ—Ç–≤–µ—Ç—ã (–Ω–æ –º—ã —Ç–æ –∑–Ω–∞–µ–º —á—Ç–æ —Å–ª–æ–≤–æ —Ç–æ–ª—å–∫–æ
–æ–¥–Ω–æ, –Ω–æ –Ω–µ –±—É–¥–µ–º –µ–≥–æ –Ω–∞–∑—ã–≤–∞—Ç—å). –ù–∞–ø–∏—à–∏ –º–µ—Ç–æ–¥ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∏–º—ë–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏
–≤—ã–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª–∏ —ç—Ç—É —Å—Ç—Ä–æ–∫—É –ø–æ–±—É–∫–≤–µ–Ω–Ω–æ –≤ —Å—Ç–æ–ª–±–∏–∫: –∏–º—è –∞–≤—Ç–æ—Ä–∞ –∏ –±—É–∫–≤—É –ø–æ–¥ –Ω–∏–º.
*/

fun String.pidmarkoz(users: List<String>) {
    val threadSize = this.length
    val today = LocalDate.now()
    val formatter = DateTimeFormatter.ofPattern("d MMMM yyyy")
    for (i in 0 until threadSize) {
        val horizontalBorder = "-".repeat(40)
        val dateFormatted = today.format(formatter)
        println(horizontalBorder)
        val user = users[i % users.size]
        val userAndDate = user + " ".repeat(36 - user.length - dateFormatted.length) + dateFormatted
        val charLine = this[i] + " ".repeat(36 - this[i].toString().length)
        val replies = threadSize - i - 1
        val reposts = Random.nextInt(1, users.size)
        val likes = Random.nextInt(1, users.size)
        val bookmark = Random.nextInt(1, users.size)
        val emojis = " üí¨$replies     üîÅ$reposts     ‚ù§Ô∏è$likes     üîñ$bookmark    üì§"
        println("| $userAndDate |")
        println("| $charLine |")
        println("| $emojis |")
        println(horizontalBorder)
    }
}
